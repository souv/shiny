{
    "contents" : "#selenium-server-standalone-2.47.1.jar  #化成小節點\n#建立欄位\n#待解決問題:startserer用好就不用cmd了\n#dont use loop to do things\n#可以取抓總共有幾個詳細資料，如果有新的就抓取\ne = function(expr) eval(parse(text=expr))\nclist <- c(\"nominalprice\", \"realprice\")\n\nfor (i in clist) {\n  a=paste(\"c:/TimePlot-\", i, \".png\", sep=\"\")\n}\n\nfor(i in 2:3){\n    testurl <- paste(\"a\",i,sep=\"\")\n  }\n\n\n\n\n\n\nx <- c(\"file_a.csv\", \"file_b.csv\", \"file_c.csv\")\n\nfor (i in 2:5){\n  \n  \ny <- gsub(\"file_\", i, x)\nprint (y)\n}\ny\n\n\n\n\n\n\nd= 5\nfor(i in 1:10) \n{ \n  nam <- paste(\"A\", i, sep = \"\")\n  assign(nam, 5)\n}\n\nmybiglist <- list()\nfor(i in 1:5){\n  a <- runif(10)\n  b <- rnorm(16)\n  c <- rbinom(8, 5, i/10)\n  name <- paste('item:',i,sep='')\n  tmp <- list(uniform=a, normal=b, binomial=c)\n  mybiglist[[name]] <- tmp\n}\n\nxpathlist<-list()\nxpath=\"//*[@id='table01']/form[2]/table/tbody/tr[k]/td[6]/input\"\nfor(i in 2:3){\n  name <- paste('item:',i,sep='')\n  tmp=(gsub(\"k\",i,xpath))\n  xpathlist[[name]]<-tmp\n}\n\nxpath=data.frame(xpathlist)\nxpath=t(xpath)\nxpath=data.frame(xpath)\n\n#正式來爬公開資訊\n#試著抓公開資訊觀測站\nlibrary(XML)\nlibrary(RSelenium)\nremDr <- remoteDriver(browserName=\"firefox\", port=4444)\n\n#checkForServer() \n#startServer()  \nremDr$open()\nremDr$navigate(\"http://mops.twse.com.tw/mops/web/t05sr01_1\")\nremDr$navigate(\"http://mops.twse.com.tw/mops/web/t05st02\")\n\n#可以成功點擊全部公司那個button了\n# webel <- remDr$findElement(using = \"xpath\", \"//*[@id='table01']/form[1]/table/tbody/tr[2]/td[1]/input\")\n# webel$clickElement()\n\n\n#建立xpath的資料集\n\nfor (i in 2:4){\nxpath=\"//*[@id='table01']/form[2]/table/tbody/tr[k]/td[6]/input\"\nxpath2=(gsub(\"k\",i,xpath))\nxpath3=data.frame(xpath2)\n}\n\n#抓8.12的重大訊息資料下來\n\n\n#抓8.13重大訊息的資料下來\n\n\n\n#用載下來的原始碼去計算總共有幾個重大訊息，15個會有一個橫棒，所以tr會有超過標題的個數，因為它會包含\ndoc<- htmlParse(button$getPageSource()[[1]],encoding='utf-8')\ncount<-xpathSApply(doc,\"//*[@id=\\\"fm\\\"]/table/tbody//td[6]/input[10]\")\ncounts<-length(count)+ceiling(length(count)/15)\n\n#公開資訊觀測站，跑一個就好了\nalldata = data.frame()\nx<-\"tr[i]/td[6]/input\"\nfor (i in (2:3)){\n  remDr <- remoteDriver(browserName=\"firefox\", port=4444)\n  remDr$open()\n  remDr$navigate(\"http://mops.twse.com.tw/mops/web/t05sr01_1\")\n  \n  y<-sub(\"i\",2,x)#sub會取代第一個遇到的，gsub會取代所有的\n  z<-paste(\"//*[@id='table01']/form[2]/table/tbody/\",y,sep=\"\")\n  z\n  print(z)\n  \n  button<-remDr$findElement(using=\"xpath\",z)\n  button$clickElement()\n  \n  remID<-remDr$getWindowHandles()\n  A=unlist(remID)\n  button$switchToWindow(A[[2]])\n  doc<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\n  #發言日期\n  date=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[1]/td[2]/text()\",xmlValue)\n\n  \n  #發言人:要加xmlValue不然會屬於一個網頁碼，在r中是不好處理的\n  people=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[2]/td[1]/text()\",xmlValue)\n\n  \n  #發言時間\n  time=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[1]/td[3]/text()\",xmlValue)\n  \n  #發言人職稱\n  status=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[2]/td[2]/text()\",xmlValue)\n  \n  #主旨\n  title=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[3]/td\",xmlValue)\n  \n  #說明\n  content=xpathSApply(doc,path=\"//*[@id=\\\"table01\\\"]/table[2]/tbody/tr[5]/td/pre/text()\",xmlValue)\n  \n  \n  tempdata = data.frame(date,time,people,status,title,content)\n  alldata = rbind(alldata, tempdata)\n}\n\n#用簡單的迴圈去跑\nfor (i in (2:3)){\n  remDr <- remoteDriver(browserName=\"firefox\", port=4444)\n  remDr$open()\n  remDr$navigate(\"http://mops.twse.com.tw/mops/web/t05st02\")\n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"year\\\"]\")\n  \n  webElem1$sendKeysToElement(list('105'))\n  \n  \n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"month\\\"]\")\n  \n  webElem1$sendKeysToElement(list('8'))\n  \n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"day\\\"]\")\n  \n  webElem1$sendKeysToElement(list('13'))\n  \n  button<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"search_bar1\\\"]/div/input[@type=\\\"button\\\"]\")\n  \n  button$clickElement()\n  \n    y<-sub(\"i\",i,x)#sub會取代第一個遇到的，gsub會取代所有的\n    z<-paste(\"//*[@id='fm']/table/tbody/\",y,sep=\"\")\n    button<-remDr$findElement(using=\"xpath\",value=z)\n    button$clickElement()\n\n}\n\n\nx<-\"tr[i]/td[6]/input[10]\"\n\n#真正能夠抓取多個詳細資料的連結了\nfor (i in (2:3)){\n  remDr <- remoteDriver(browserName=\"firefox\", port=4444)\n  remDr$open()\n  remDr$navigate(\"http://mops.twse.com.tw/mops/web/t05st02\")\n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"year\\\"]\")\n  \n  webElem1$sendKeysToElement(list('105'))\n  \n  \n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"month\\\"]\")\n  \n  webElem1$sendKeysToElement(list('8'))\n  \n  webElem1<-remDr$findElement(\"xpath\",\"//*[@id=\\\"day\\\"]\")\n  \n  webElem1$sendKeysToElement(list('13'))\n  \n  button<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"search_bar1\\\"]/div/input[@type=\\\"button\\\"]\")\n  \n  button$clickElement()\n#   y<-sub(\"i\",i,x)#sub會取代第一個遇到的，gsub會取代所有的\n#   z<-paste(\"//*[@id='fm']/table/tbody/\",y,sep=\"\")\n  b1<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"fm\\\"]/table/tbody/tr[2]/td[6]/input[10]\")\n#   button<-remDr$findElement(using=\"xpath\",value=\"\")\n  b1$clickElement()\n\nb2<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"fm\\\"]/table/tbody/tr[3]/td[6]/input[10]\")\n\nb2$clickElement()\n\nremID<-button$getWindowHandles()\nA=unlist(remID)\nbutton$switchToWindow(A[[2]])\ndoc1<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\nbutton$switchToWindow(A[[3]])\ndoc2<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\n\n#   #print(z)#用來印出目前在搜尋的xpath\n#   remID<-button$getWindowHandles()\n#   A=unlist(remID)\n#   button$switchToWindow(A[[2]])\n#   doc<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\n\n#   button$closeWindow()\n\n  #發言日期\n  date=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[1]/td[2]\",xmlValue)\n  \n  \n  #發言人:要加xmlValue不然會屬於一個網頁碼，在r中是不好處理的\n  people=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[2]/td[1]\",xmlValue)\n  \n  #發言時間\n  time=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[1]/td[3]\",xmlValue)\n  \n  #發言人職稱\n  status=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[2]/td[2]\",xmlValue)\n  \n  #主旨\n  title=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[3]/td\",xmlValue)\n  \n  #說明\n  content=xpathSApply(doc2,path=\"//*[@id=\\\"table01\\\"]/center/table[1]/tbody/tr[5]/td/pre/font\",xmlValue)\n  \n  \n  tempdata2 = data.frame(date,time,people,status,title,content)\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n#嘗試點擊詳細資料的按鈕\n\nwebel <- remDr$findElement(using = \"xpath\", \"//*[@id='table01']/form[2]/table/tbody/tr[2]/td[6]/input\")\n\n\n#試一個的\nbutton<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"fm\\\"]/table/tbody/tr[2]/td[6]/input[10]\")\nbutton$clickElement()\nremID<-button$getWindowHandles()\nA=unlist(remID)\nbutton$switchToWindow(A[[2]])\n#抓原始碼\nbutton$closeWindow()\nbutton$switchToWindow(A[[1]])\n#試用字元資料集，依次跑多個詳細資料\n\nfor (i in \"2\":\"3\"){\n  \nbutton<-remDr$findElement(using=\"xpath\",\"//*[@id=\\\"fm\\\"]/table/tbody/tr[\\\"i\\\"]/td[6]/input[10]\")\nbutton$clickElement()\nSys.sleep(30)\nremID<-button$getWindowHandles()\nA=unlist(remID)\nbutton$switchToWindow(A[[2]])\n#抓原始碼\nbutton$closeWindow()\nbutton$switchToWindow(A[[1]])\n\n}\n\ni=\"2\"\n\nfor(i in 2:3){\n  \"//*[@id=\\\"fm\\\"]/table/tbody/tr[i]/td[6]/input[10]\"\n  print(x)\n}\n\nbutton<-webel$findElement(using=\"xpath\",\"//*[@id='table01']/form[2]/table/tbody/tr[3]/td[6]/input\")\nbutton$clickElement()\n\nremID<-button$getWindowHandles()\nbutton$switchToWindow(\"{adcad646-2605-42b3-9bb3-84ac8fef4e8a}\")\n\ndoc<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\ndoc\n\n#發言日期\ndate=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[1]/td[2]/text()\",xmlValue)\nunlist(content)\n\n#發言人:要加xmlValue不然會屬於一個網頁碼，在r中是不好處理的\npeople=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[2]/td[1]/text()\",xmlValue)\npeople\n\n#發言時間\ntime=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[1]/td[3]/text()\",xmlValue)\n\n#發言人職稱\nstatus=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[2]/td[2]/text()\",xmlValue)\n\n#主旨\ntitle=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[3]/td\",xmlValue)\n\n#說明\ncontent=xpathSApply(doc,path=\"//*[@id=\\\"table01\\\"]/table[2]/tbody/tr[5]/td/pre/text()\",xmlValue)\n\n\ntempdata = data.frame(date,time,people,status,title,content)\n\n\n\n#重複點擊多個button\nbutton<-remDr$findElement(using=\"xpath\",\"//table[@class='hasBorder']//td/input[@type='button']\")\n//table[@class='hasBorder']//td/input[@type='button']\nbutton$clickElement()\n\n\n\n\n\n\n\n#找出目前有幾個button，之前8/12有606個重大訊息\nbutton_count=xpathSApply(doc,path=\"//table[@class='hasBorder']//td/input[@type='button']\")\nbutton_count\n\n\n\n\n\n------------------------------------------------------------------------\n#抓財務報表的資料\nremDr$open()\nremDr$navigate(\"http://mops.twse.com.tw/mops/web/t164sb03\")\nwebElem1<-remDr$findElement(\"id\",\"co_id\")\n\nwebElem1$sendKeysToElement(list('2330',key='enter'))\n\nbutton<-remDr$findElement(using=\"xpath\",\"//*[@id='search_bar1']/div/input[@type='button']\")\nbutton$clickElement()\n\ndoc<- htmlParse(remDr$getPageSource()[[1]],encoding='utf-8')\ndoc\n\n#抓取第幾年幾季\ncontent=xpathSApply(doc,path=\"//*[@id=\\\"table01\\\"]/center/table[2]/tbody/tr[1]/th\",xmlValue)\n\nres_text <- content(doc, \"text\", encoding = \"UTF-8\") %>%\n  `Encoding<-`(\"UTF-8\")\n\ndt <- doc %>%\n  read_html(encoding = \"UTF-8\") %>%\n  html_nodes(xpath = \"//*[@id=\\\"table01\\\"]\") %>%\n  as.character %>%\n  XML::readHTMLTable(encoding = \"UTF-8\") %>%\n  .[[1]]\n\n#抓取table出來:http://stackoverflow.com/questions/1395528/scraping-html-tables-into-r-data-frames-using-the-xml-package\ntables <- readHTMLTable(doc)#法一\ntables[5]\ntablehead <- xpathSApply(doc, \"//*[@id=\\\"table01\\\"]\", xmlValue)#法二\ntime <- gsub(pattern=\"[[:space:]]\",replacement=\" \",tablehead)\n-------------------------------------------------------------------------------------------------------\n\n目前解決方向:\n  1.從python的selenium去學習 \n2.找到r 對javascript的街口\n3.寫javascript去抓資料\n4.學david python中去掉用javascript的方法去做\n5.用phantomJS去做\n\n\n1.抓value值 2.程式碼在下來從裡面抓資料3.用selenium直接抓資料\n\n#onclick +popup window\nhttp://stackoverflow.com/questions/23838740/how-to-scrape-content-rendered-in-popup-window-with-javascript-links-using-scra\nhttp://stackoverflow.com/questions/25718771/scraping-advice-on-crawling-and-info-from-javascript-onclick-function\nhttps://www.google.com.tw/?ion=1&espv=2#q=javascript%20onclick%20popup%20window%20web%20scrape\nhttp://selenium-python.readthedocs.io/navigating.html#popup-dialogs\nhttp://www.cnblogs.com/fnng/p/3157639.html\nhttp://www.cnblogs.com/fnng/p/3249082.html\nhttps://www.google.com.tw/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=r+web+scraping+javascript\nhttp://withr.me/automatically-scrape-flight-ticket-data-using-r-and-phantomjs/\n  http://www.cnblogs.com/fnng/p/3214112.html\nhttp://www.quackit.com/javascript/popup_windows.cfm\nhttp://blog.databigbang.com/web-scraping-ajax-and-javascript-sites/\n  http://phantomjs.org/network-monitoring.html\n\n#javascript語言\nhttps://www.google.com.tw/search?q=openwindow+document.getelementbyid+onclick&oq=openwindow+document.getelementbyid+onclick&gs_l=serp.3...84679.90154.0.90468.4.4.0.0.0.0.132.435.2j2.4.0....0...1c.1.64.serp..0.2.220...0j0i10k1j30i10k1.4DcUlNxGTAA\nhttp://www.w3schools.com/jsref/met_win_open.asp\nhttp://stackoverflow.com/questions/9994120/javascript-pass-selected-value-from-popup-window-to-parent-window-input-box\nhttps://www.codecademy.com/en/forum_questions/55766a1076b8fe5a39000239\nhttp://stackoverflow.com/questions/11420892/onclick-open-window-pass-variable-using-document-getelementbyid\nhttp://www.w3schools.com/jsref/met_html_click.asp\n\n#github的上船功能\nhttp://forums.wasabistudio.ca/viewtopic.php?f=69&p=477010\nhttps://zhuanghongkuan1.gitbooks.io/demo0115/content/chapter4/sc4-4.html\n\n#javascript+onclick+selenium\nhttps://www.youtube.com/watch?v=49Mwqbu2cMo #David的javascript示範\nhttps://www.reddit.com/r/selenium/comments/2lscf4/clicking_a_button_using_selenium_python/\n  http://stackoverflow.com/questions/22336641/how-to-click-this-button-using-selenium\nhttp://stackoverflow.com/questions/21350605/python-selenium-click-on-button?rq=1\nhttps://www.youtube.com/watch?v=hDXY6Tco2JU\nhttp://ropensci.github.io.zedataro.com/RSelenium/\n  http://github.com.https.zedataro.com/hadley/testthat\nhttp://rpubs.com.zedataro.com/johndharrison/13408\nhttps://www.youtube.com/watch?v=46bST9nVJ70\nhttps://www.youtube.com/results?search_query=selenium+javascript+onclick+\n  http://www.rdocumentation.org/packages/RSelenium/versions/1.3.5/topics/remoteDriver-class\nhttps://www.seleniumeasy.com/selenium-tutorials/click-element-using-javascriptexecutor\nhttps://www.seleniumeasy.com/selenium-tutorials\n\n#資料處理問題:https://www.ptt.cc/bbs/R_Language/M.1415536549.A.7C0.html\n#將list轉成data.frame\n#http://stackoverflow.com/questions/4512465/what-is-the-most-efficient-way-to-cast-a-list-as-a-data-frame\n參考網址:http://stackoverflow.com/questions/4227223/r-list-to-data-frame?noredirect=1&lq=1\nmylist <- list(list(a = 1, b = 2, c = \"a\"), list(a = 2, b = 3, c = \"b\"))\nsystem.time(replicate(1000, do.call(rbind,lapply(mylist, data.frame,stringsAsFactors=FALSE))))\nmylistdataframe=do.call(rbind,lapply(mylist, data.frame,stringsAsFactors=FALSE))\n\nA=list(\"apple\")\nB=do.call(rbind.data.frame, A)\n\n#apply家族\n\nhead(airquality)\napply(airquality,2,mean)#計算每一行的平均數\napply(airquality,1,mean)#計算每一列的平均數\na=lapply(airquality,function(x) sum(is.na(x)))#結果即為一個list\nclass(a)\nsapply(airquality,function(x) sum(is.an(x)))\n\n\n\n\n\n\n\n#使用phantomjs\nhttp://stackoverflow.com/questions/7867105/parsing-html-and-following-a-javascript-link\nhttp://stackoverflow.com/questions/26631511/scraping-javascript-website-in-r\n\n\n\n\nhttp://www.seleniumhq.org/download/#selenium_ide\n  http://stackoverflow.com/questions/26692227/web-scraping-with-r\n\nhttp://stackoverflow.com/questions/26631511/scraping-javascript-website-in-r\nhttp://stackoverflow.com/questions/22204382/scraping-javascript-website?rq=1\nhttp://stackoverflow.com/questions/8550114/can-scrapy-be-used-to-scrape-dynamic-content-from-websites-that-are-using-ajax?rq=1\nhttp://stackoverflow.com/questions/28438010/using-r-to-scrape-tables-when-url-does-not-change\nhttp://www.r-bloggers.com/relenium-selenium-for-r-a-new-tool-for-webscraping/\n  http://lluisramon.github.io/relenium/example.html\nhttps://www.youtube.com/watch?v=zcUGla8EjjY  **\n  https://www.youtube.com/watch?v=PYy5C9IIgp8 **\n  https://www.youtube.com/watch?v=m6zMBFCfgto  **\n  http://help.plweb.org/installation:jdk  **\n  https://predictiveheuristics.com/2014/10/28/a-primer-on-web-scraping-with-r/ **\n  http://www.r-bloggers.com/scraping-with-selenium/\n  http://www.computerworld.com/article/2971265/application-development/how-to-drive-a-web-browser-with-r-and-rselenium.html\n\n**\n  http://brucecodeworld.logdown.com/posts/243463-python-open-data-capture  #python網路爬取\nhttp://stackoverflow.com/questions/8298165/inspecting-large-json-data-in-chrome\nhttp://bryannotes.blogspot.tw/2016/07/python-payload-session.html\nhttp://www.oxxostudio.tw/articles/201512/spider-basic.html\n\n**這個寫超好的\nhttp://data-sci.info/2015/10/12/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2%E7%B3%BB%E5%88%97-crawler-1-%E4%BD%BF%E7%94%A8chrome%E3%80%8C%E6%AA%A2%E6%9F%A5%E5%85%83%E7%B4%A0%E3%80%8D%E6%89%BE%E5%87%BA-pchome%E8%B3%BC%E7%89%A9/\n  \n  http://tung.tsu.edu.tw/lecture/jquery_phoneGap/18-CrossDomain01.html\n\nhttps://www.ptt.cc/bbs/Browsers/index.html  **可以ㄨ\n\n\nlibrary(devtools)\n?install_github\ninstall_github(\"crubba/Rwebdriver\",force=TRUE)\n\nlibrary(XML)\nlibrary(RSelenium)\nurl <- \"http://spiderbook.com/company/17495/details?rel=300795\"\ncheckForServer()        # download Selenium Server, if not already presnet\nstartServer()           # start Selenium Server\nremDr <- remoteDriver() # instantiates a new driver\nremDr$open()            # open connection\nremDr$navigate(url)     # grab and process the page (including scripts)\ndoc   <- htmlParse(remDr$getPageSource()[[1]])\nlinks <- as.character(doc['//a[@class=\"doclink\"]/@href'])\nlinks\n\n#抓rshiny的動態網頁資料\nshiny::runGitHub('d3ShinyExample', 'christophergandrud',port=5678)\nremDr$open()\nremDr$navigate(\"http://127.0.0.1:5678\")\nnodes<-remDr$executeScript(\"return nodes;\")#抓javascript的東西\nhead(do.call(rbind.data.frame,nodes))\n\n#試著抓公開資訊觀測站\nlibrary(XML)\nlibrary(RSelenium)\nremDr <- remoteDriver(browserName=\"firefox\", port=4444)\n\ncheckForServer() \nstartServer()  \nremDr$open()\nremDr$navigate(\"http://mops.twse.com.tw/mops/web/t05sr01_1\")\nwebElem2<-remDr$findElement(\"id\",\"table01\")\nwebElem3<-remDr$findElement(\"class\",\"even\")\n#可以成功點擊全部公司那個button了\n# webel <- remDr$findElement(using = \"xpath\", \"//*[@id='table01']/form[1]/table/tbody/tr[2]/td[1]/input\")\n# webel$clickElement()\n#嘗試點擊詳細資料的按鈕\nwebel <- remDr$findElement(using = \"xpath\", \"//*[@id='table01']/form[2]/table/tbody/tr[2]/td[6]/input\")\nwebel$clickElement()\n\n#重複點擊多個button\n//table[@class='hasBorder']//td/input[@type='button']\n\nremID<-webel$getWindowHandles()\nwebel$switchToWindow(remID[[1]])\n\n\ndoc<- htmlParse(webel$getPageSource()[[1]],encoding='utf-8')\ndoc\n\ncontent=xpathSApply(doc,path=\"//*[@id='table01']/table[2]/tbody/tr[5]/td/pre/text()\")\nunlist(content)\n\n\n\n\n#抓onclick裡面的屬性值\nonclick=xpathSApply(doc,path=\"//td/input/@onclick\")\nlength(onclick)\n\n#試抓詳細資料裡面的名子\nname<-remDr$findElement(value=\"//tbody/tr[2]/td[1]\")\nname\nname$getElementText())\napply(name,1,function(x) {x$getElementText()})\nresHeaders <- (lapply(webel, function(x){x$getElementText()}))\n\nwebel$findElement(using=\"xpath\",\"//*[@id='table01']/table[2]/tbody/tr[1]/th[1]\")\n\n#嘗試把原始碼都抓下來\ndoc<- htmlParse(remDr$getPageSource()[[1]])\ndoc\nxpathSApply(doc,path=\"//*[@id='table01']/form[2]/table/tbody/tr[2]/td[5]\")\n\n\nlinks <- as.character(doc[\"//*[@id='table01']/form[2]/table/tbody/tr[2]/td[5]\"])\nlinks\n\n#從日期搜尋那邊抓資料:因為他會放在value直裡面\nremDr <- remoteDriver(browserName=\"firefox\", port=4444)\nremDr$open()\nremDr$navigate(\"http://mops.twse.com.tw/mops/web/t05st02\")\n\nwebElem1<-remDr$findElement(\"id\",\"year\")\n\nwebElem1$sendKeysToElement(list(\"105\"))\n\nwebElem1<-remDr$findElement(\"id\",\"month\")\n\nwebElem1$sendKeysToElement(list(\"8\"))\n\nwebElem1<-remDr$findElement(\"id\",\"day\")\n\nwebElem1$sendKeysToElement(list(\"10\"))\n\n\n#按查詢那個按鈕\nwebel <- remDr$findElement(using = \"xpath\", \"//*[@id='search_bar1']//*[@type='button']\")\nwebel$clickElement()\n\n# \n# web<-remDr$findElements('css selector',\"#search_bar1 > div > input[type='button']\")\n# web$clickElement()\n\n#titleCast > table > tbody > tr:nth-child(2) > td.itemprop > a > span  \n#titleCast .itemprop span\n\n#search_bar1 > div > input[type='button']\n\n#詳細資料的按鈕(可以不用按)\nwebel <- remDr$findElement(using = \"xpath\", \"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[10]\")\n\n#把整個html抓下來\ndoc<- htmlParse(remDr$getPageSource()[[1]])\n\ndoc\n\n#可以將日期抓取下來了\ndatas=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//td[1]\")#抓多個日期下來\ndate=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[3]\")#抓單個日期下來\ndate=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[3]\",xmlGetAttr,'value')\nwrite.table(date,\"date.txt\", row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n#抓發言時間下來\ntime=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//td[2]/text()\")\ntime\n\n#抓公司代號下來\nnumber=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//td[3]/text()\")\nnumber\n\n#抓公司名稱下來\ncompany=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//td[4]/text()\")\ncompany\n\n#抓主旨下來\ntitle=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//td[5]/text()\")\ntitle\n\n\n# xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[1]\")#可以抓到一些東西\n# company_name=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[1]\",xmlGetAttr,'value')#可以抓到一些東西\n# write.table(company_name,\"company_name.txt\", row.names = FALSE, col.names = FALSE, quote = FALSE)\n\ncontents=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody//tr/td/input[9]/@value\")\ncontents\ncontent=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[9]\")\n\n\n要做的，可以抓多筆詳細資料裡面的資料    //td[6]/input[9]\n#//td[6]/input[@type=\"hidden\"]//@value  可以抓value裡面的東西\n#http://mops.twse.com.tw/mops/web/js/mops1.js  javascript\n\n#可以成功抓下value那個地方的資料了\ncontent=xpathSApply(doc,path=\"//*[@id='fm']/table/tbody/tr[2]/td[6]/input[9]\",xmlGetAttr,'value')\nwrite.table(content,\"content.txt\", row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n\nB=do.call(rbind.data.frame, date)\n\n#將HTML原始碼轉成一個資料表:http://stackoverflow.com/questions/24958490/how-to-convert-html-lists-into-data-frame-in-r\nlibrary(XML)\nhh <- htmlParse(intext, asText=T)\n\n#use xpath to extract data\ntitles <- xpathSApply(hh, \"//div[@class='header']/*/text()\", xmlValue)\ninfo <- xpathApply(hh, \"//div[@class='content']/ul\", function(x) \n  gsub(\"\\\\s+\",\"\",xpathSApply(x,\"./li/text()\", xmlValue)))\n\n#merge results together\ndo.call(rbind, Map(cbind, titles, info))\n\n\n\n\n\n\n\n\n\nresHeaders <- (lapply(webel, function(x){x$getElementText()}))\n\n\n\n\n#某個抓google trend的youtube範例\nhttps://www.youtube.com/watch?v=qUKEPurS6-s\nremDr$navigate(\"https://www.google.com/trends/\")\nwebElem1<-remDr$findElement(\"class name\",\"ng-pristine\")\nwebElem1$sendkeysToElement(list('twitter',key='enter'))#可以輸入某個數值然後按enter做搜尋\n\nwebElem2<-remDr$findElement(\"id\",\"settings-menu-button\")\nwebElem2$clickElement()\nwebElem3<-remDr$findElement(\"id\",\"exportMI\")\nwebElem3$clickElement()#可以設定說你要點擊某個按鈕\n\n#網路爬蟲書上的selenium\nlibrary(Rwebdriver)\nlibrary(XML)\nstart_session(root=\"http://localhost:4444/wd/hub/\",browser=\"firefox\")\n?start_session\npost.url(url=\"http://www.r-datacollection.com/materials/selenium/intro.html\")\nget.url()\npage_title()\nbuttonID<-element_xpath_find(value=\"/html/body/div/div[2]/form/input\")\n-----------------selenium------------------------\n  #爬蟲想法:\n  It appears that the content of interest is being generated dynamically with \nJavascript and Ajax on this webpage.So the raw HTML of this page doesn’t help us much.\n\nsessionInfo()\nlibrary('httr')\nurl <- 'https://www.fidelity.com/fund-screener/evaluator.shtml#!&ft=BAL_all&ntf=N&expand=%24FundType&rsk=5'\npage <- GET(url)\nprint(http_status(page))\npage_text <- content(page, as='text')\ngrepl('GMMAX', page_text, ignore.case=T)\ngrepl('Aberdeen', page_text, ignore.case=T)\n\nsetwd(\"C:\\\\Users\\\\user\\\\Documents\\\\R\\\\win-library\\\\3.2\\\\RSelenium\\\\bin\")\nsetwd(\"C:\\\\Users\\\\user\\\\Desktop\\\\股票文獻\\\\網路爬蟲\")\nlibrary('RSelenium')\ncheckForServer() # search for and download Selenium Server java binary.  Only need to run once.\nstartServer() # run Selenium Server binary\nremDr <- remoteDriver(browserName=\"firefox\", port=4444) # instantiate remote driver to connect to Selenium Server\nremDr$open(silent=T) # open web browser\n#\n#selenium介紹:https://www.youtube.com/watch?v=BnzF5Hpr4dc\n#高中生解題系統:http://it-easy.tw/zerojudge/\n#rselenium:https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf\n#rseleenium:https://cran.r-project.org/web/packages/RSelenium/vignettes/RSelenium-basics.html\n\n#大數學堂教學  https://www.youtube.com/watch?v=MQH4Rau_F_A\nlibrary(RSelenium)\nRSelenium::startServer()\nremDr<-remoteDriver(remoteServerAddr=\"localhost\",port=4444,browserName=\"firefox\")\nremDr$getStatus()\nremDr$open()\nremDr$navigate(\"https://www.ptt.cc/bbs/Food/index.html\")\nwebElem<-remDr$findElements('css selector',\".r-ent\")\na=sapply(webElem,function(x){\n  c=x$findChildElement('css selector','.author')\n  d=x$findChildElement('css selector','.title')\n  e=x$findChildElement('css selector','.date')\n  cbind(c(\"author\"=c$getElementText(),\"title\"=d$getElementText(),e$getElementText()))\n}\n)\n\n\n\n\n\nhttps://www.youtube.com/watch?v=MQH4Rau_F_A\n抓取以Ajax 生成的頁面需要許多時間耐心觀察，才能找到抓取的切入點。\n但是使用Selenium 可以省去這個麻煩，他的自動點擊跟載入Ajax生成的頁面結果，\n讓人只消知道元素所在便可抓取資訊，再搭配BeautifulSoup4 強大的解析功能\n，用Python 抓取網頁，再簡單不過！\n#抓取心得:firefox要用舊的版本/standalone要開著才能做selenium\n\nrequire(RSelenium)\n# RSelenium::startServer # if needed\ninitializing_parcel_number <- \"00000000000\"\nremDr <- remoteDriver()\nremDr$open()\nremDr$navigate(\"http://www.muni.org/pw/public.html\")\nwebElem <- remDr$findElement(using = \"name\", \"PAR1\")\n# webElem$highlightElement() # to visually check what elemnet is selected\nwebElem$sendKeysToElement(list(initializing_parcel_number, key = \"enter\"))\n# get first link containing javascript:getParcel\nwebElem <- remDr$findElement(using = \"css selector\", '[href*=\"javascript:getParcel\"]')\n# webElem$highlightElement() # to visually check what elemnet is selected\n# send a webElement as an argument. \nremDr$executeScript(\"arguments[0].click();\", list(webElem))\n\n#rselenium tutorial\nrequire(RSelenium)\nrequire(Rwebdriver)\nremDr <- remoteDriver(remoteServerAddr = \"localhost\" \n                      , port = 4444\n                      , browserName = \"firefox\"\n)        \nremDr$open()\nremDr$navigate(\"http://www.google.com\")\nremDr$navigate(\"http://www.bbc.co.uk\")\nremDr$getCurrentUrl()\nremDr$goBack()\nremDr$goForward()\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem<-remDr$findElement(using='id',value =\"gbqfq\")\nwebElem<-remDr$findElement(using='id',value=\"lst-ib\")\nwebElem$getElementAttribute(\"id\")\nwebElem$getElementAttribute(\"class\")\n\nwebElem<-remDr$findElement(using='class name',\"gsfi lst-d-f\")\n\nwebElem$getElementAttribute(\"class\")\n\n\nwebElem$getElementAttribute(\"type\")\n\nwebElem <- remDr$findElement(using='name', \"q\")\nwebElem$getElementAttribute(\"id\")\nwebElem$getElementAttribute(\"class\")\n\n#做搜尋關鍵字的動作\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem <- remDr$findElement(using = \"xpath\", \"//*/input[@id = 'lst-ib']\")\nwebElem$sendKeysToElement(list(\"R Cran\"))#可以自動要他搜尋R Cran\n\n#搜尋後並按下enter鍵\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem <- remDr$findElement(using = \"xpath\", \"//*/input[@id = 'lst-ib']\")\nwebElem$sendKeysToElement(list(\"R Cran\", \"\\uE007\"))\n\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem <- remDr$findElement(using = \"xpath\", \"//*/input[@id = 'lst-ib']\")\nwebElem$sendKeysToElement(list(\"chang\", key = \"enter\"))\n\n\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem <- remDr$findElement(using = \"xpath\", \"//*/input[@id = 'lst-ib']\")\nwebElem$sendKeysToElement(list(\"R Cran\", key = \"enter\"))\nwebElems <- remDr$findElements(using = 'css selector', \"li.g h3.r\")\nresHeaders <- unlist(lapply(webElems, function(x){x$getElementText()}))\nresHeaders\n\n#抓google的那個圖標\nremDr$navigate(\"http://www.google.com/ncr\")\nwebElem <- remDr$findElement(\"css selector\", \"img#hplogo\")\nremDr$executeScript(\"return document.getElementById('hplogo').hidden;\", args = list())\n\nremDr$executeScript(\"document.getElementById('hplogo').hidden = true;\", args = list())\nremDr$executeScript(\"return document.getElementById('hplogo').hidden;\", args = list())\ntest <- remDr$executeScript(\"return document.getElementById('lst-ib');\", args = list())\ntest[[1]]\n\nremDr$navigate(\"http://www.r-project.org/\")\n\n#把html原始碼抓下來\nhtmlParse(remDr$getPageSource()[[1]])\nremDr$maxWindowSize()\nremDr$screenshot(display = TRUE)\nwebElems <- remDr$findElements(using=\"tag name\", \"frame\")\nsapply(webElems, function(x){x$getElementAttribute(\"src\")})\nwebElems <- remDr$findElements(using=\"xpath\",\"//frame\") # using xpath\nwebElems <- remDr$findElements(\"css selector\", \"[href]\")\nsapply(webElems, function(x){x$getElementAttributes(\"href\")})\n\nunlist(sapply(webElems, function(x){x$getElementAttribute(\"href\")}))\n\n\nwebElem$clearElement()\n# show an example of sending a key press\nwebElem$sendKeysToElement(list('R', key = 'enter'))\n\n\n\n# Collate the results for the `R` search\ngoogLinkText <- remDr$findElements(value = \"//h3[@class = 'r']\")\nlinkHeading <- sapply(googLinkText, function(x) x$getElementText())\ngoogLinkDesc <- remDr$findElements(value = \"//div[@class = 's']\")\nlinkDescription <- sapply(googLinkDesc, function(x) x$getElementText())\ngoogLinkHref <- remDr$findElements(value = \"//h3[@class = 'r']/a\")\nlinkHref <- sapply(googLinkHref, function(x) x$getElementAttribute('href'))\n\ndata.frame(heading = linkHeading, description = linkDescription, href = linkHref)\n\n# Example of javascript call\nremDr$executeScript(\"return arguments[0] + arguments[1];\", args = 1:2)\n# Example of javascript async call\njsscript <- \"arguments[arguments.length - 1](arguments[0] + arguments[1]);\"\nremDr$executeAsyncScript(jsscript, args = 1:2)\n\n\n\n\n#某個範例:http://stackoverflow.com/questions/21369254/how-do-i-click-a-javascript-link-is-it-my-xpath-or-my-relenium-selenium-usage\nrequire(RSelenium)\n# RSelenium::startServer # if needed\ninitializing_parcel_number <- \"00000000000\"\nremDr <- remoteDriver()\nremDr$open()\nremDr$navigate(\"http://www.muni.org/pw/public.html\")\nwebElem <- remDr$findElement(using = \"name\", \"PAR1\")\n# webElem$highlightElement() # to visually check what elemnet is selected\nwebElem$sendKeysToElement(list(initializing_parcel_number, key = \"enter\"))\n# get first link containing javascript:getParcel\nwebElem <- remDr$findElement(using = \"css selector\", '[href*=\"javascript:getParcel\"]')\n# webElem$highlightElement() # to visually check what elemnet is selected\n# send a webElement as an argument. \nremDr$executeScript(\"arguments[0].click();\", list(webElem))\n\n#某個範例:http://stackoverflow.com/questions/27109267/rselenium-and-javascript\nrequire(RSelenium)\ncheckForServer()\nstartServer()\nremDr<-remoteDriver()\nremDr$open()\nremDr$getStatus()\nremDr$navigate(\"http://fyed.elections.on.ca/fyed/en/form_page_en.jsp\")\n\np.codes<-c('m1p4v4', 'n3t2y3', 'n2h3v1')#這樣就可以一次抓取多個value值了\nwebElem<-remDr$findElement(using = 'id', value = \"pcode\")\nwebElem$sendKeysToElement(list(p.codes[1])) # send the first post code to the element\n\nremDr$findElement(\"id\", \"en_btn_arrow\")$clickElement() # find the submit button and click it\n\n#某個範例:\nlibrary(XML)\nlibrary(RSelenium)\nurl <- \"http://spiderbook.com/company/17495/details?rel=300795\"\ncheckForServer()        # download Selenium Server, if not already presnet\nstartServer()           # start Selenium Server\nremDr <- remoteDriver() # instantiates a new driver\nremDr$open()            # open connection\nremDr$navigate(url)     # grab and process the page (including scripts)\ndoc<- htmlParse(remDr$getPageSource()[[1]])  #可以把html的原始碼抓下來\nlinks <- as.character(doc['//a[@class=\"doclink\"]/@href'])\nlinks\n\n\n\n#http://www.pushtotest.com/selenium-tutorial-for-beginners-tutorial-2\nhttp://www.jroller.com/selenium/entry/selenium_overview_tutorial\n#rselenium:\nhttp://rpubs.com/johndharrison/12843\nhttp://rpubs.com/johndharrison/13408\nhttps://cran.r-project.org/web/packages/RSelenium/vignettes/RSelenium-basics.html\nhttps://www.youtube.com/watch?v=ic65SWRWrKA#t=2.507321\nhttps://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf\nhttp://yphuang.github.io/blog/2016/03/01/Get-Listed-Company-Announcement/\n  https://www.r-bloggers.com/scraping-with-selenium/\n  https://www.r-bloggers.com/user-2015-networks/\n  http://www.ibm.com/developerworks/cn/java/wa-selenium-ajax/\n  http://blog.sina.com.cn/s/blog_6315541b0102vtgi.html\nhttp://www.cio.com.zedataro.com/article/2976074/web-development/how-to-drive-a-web-browser-with-r-and-rselenium.html\n\n\n\n#http://www.seleniumhq.org/\n#http://www.computerworld.com/article/2971265/application-development/how-to-drive-a-web-browser-with-r-and-rselenium.html\n#https://www.youtube.com/watch?v=PYy5C9IIgp8\n#http://stackoverflow.com/questions/33124857/rselenium-is-not-working\n#https://github.com/ropensci/RSelenium/issues/34\n#https://www.youtube.com/watch?v=qUKEPurS6-s\n#https://www.r-bloggers.com/scraping-with-selenium/\nhttp://stackoverflow.com/questions/15031338/subscript-out-of-bounds-general-definition-and-solution\nhttps://cran.r-project.org/web/packages/RSelenium/vignettes/RSelenium-headless.html\nhttps://www.youtube.com/watch?v=ic65SWRWrKA\n#firefox的舊版:https://ftp.mozilla.org/pub/firefox/releases/37.0.2/\n#firefox的舊版:http://shaurong.blogspot.tw/2015/08/mozilla-firefox.html",
    "created" : 1471260647199.000,
    "dirty" : false,
    "encoding" : "BIG5",
    "folds" : "",
    "hash" : "3549363522",
    "id" : "FDD3E9B",
    "lastKnownWriteTime" : 1471222338,
    "path" : "C:/Users/user/Desktop/股票文獻/網路爬蟲/直接來真的-重大資訊爬蟲.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}